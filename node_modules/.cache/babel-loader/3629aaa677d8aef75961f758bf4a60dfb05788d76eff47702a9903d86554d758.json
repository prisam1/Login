{"ast":null,"code":"const jwt = require('jsonwebtoken');\nconst userModel = require(\"../model/userModel\");\nconst authenticate = function (req, res, next) {\n  try {\n    const authHeader = req.headers['authorization'];\n    const token = authHeader && authHeader.split(' ')[1];\n    if (token == null) return res.sendStatus(401);\n    if (!token) {\n      return res.status(401).send({\n        status: false,\n        message: \"No token found\"\n      });\n    }\n    jwt.verify(token, \"blank\", function (err, decodedToken) {\n      if (err) {\n        return res.status(401).send({\n          status: false,\n          message: err.message\n        });\n      }\n      req.decodedToken = decodedToken;\n      console.log(decodedToken);\n      next();\n    });\n  } catch (err) {\n    return res.status(500).send({\n      status: false,\n      message: err.message\n    });\n  }\n};\n\n//  const refreshToken = async(req, res) => {\n//     try {\n//         const refreshToken = req.cookies.refreshToken\n//         if(!refreshToken)\n//          return res.sendStatus(401)\n//         const user = await userModel.find({\n//             where:{\n//                 refresh_token: refreshToken\n//             }\n//         });\n//         if(!user) return res.sendStatus(403)\n//         jwt.verify(refreshToken, req.decodedToken, (err, decoded) => {\n//             if(err) return res.sendStatus(403)\n//             const userId = user.id\n//             const name = user.name\n//             const email = user.email\n//             const accessToken = jwt.sign({userId, name, email}, \"HiPal\",{\n//                 expiresIn: '15s'\n//             });\n//             res.json({ accessToken });\n//         });\n//     } catch (error) {\n//         console.log(error);\n//     }\n// }\nmodule.exports = {\n  authenticate\n};","map":{"version":3,"names":["jwt","require","userModel","authenticate","req","res","next","authHeader","headers","token","split","sendStatus","status","send","message","verify","err","decodedToken","console","log","module","exports"],"sources":["D:/Projects/Login/src/auth/auth.js"],"sourcesContent":["const jwt = require('jsonwebtoken')\nconst userModel = require(\"../model/userModel\")\n\n\nconst authenticate = function (req, res, next) {\n    try {\n        const authHeader = req.headers['authorization'];\n        const token = authHeader && authHeader.split(' ')[1];\n        if(token == null) \n        return res.sendStatus(401);\n      \n        if (!token) {\n            return res.status(401).send({ status: false, message: \"No token found\" })\n        }\n        jwt.verify(token, \"blank\", function (err, decodedToken) {\n            if (err) {\n                return res.status(401).send({ status: false, message: err.message })\n            }\n            req.decodedToken = decodedToken\n            console.log(decodedToken)\n            next()\n        })\n    } catch (err) {\n        return res.status(500).send({ status: false, message: err.message })\n    }\n}\n\n \n//  const refreshToken = async(req, res) => {\n//     try {\n//         const refreshToken = req.cookies.refreshToken\n//         if(!refreshToken)\n//          return res.sendStatus(401)\n//         const user = await userModel.find({\n//             where:{\n//                 refresh_token: refreshToken\n//             }\n//         });\n//         if(!user) return res.sendStatus(403)\n//         jwt.verify(refreshToken, req.decodedToken, (err, decoded) => {\n//             if(err) return res.sendStatus(403)\n//             const userId = user.id\n//             const name = user.name\n//             const email = user.email\n//             const accessToken = jwt.sign({userId, name, email}, \"HiPal\",{\n//                 expiresIn: '15s'\n//             });\n//             res.json({ accessToken });\n//         });\n//     } catch (error) {\n//         console.log(error);\n//     }\n// }\nmodule.exports={authenticate}"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,cAAc,CAAC;AACnC,MAAMC,SAAS,GAAGD,OAAO,CAAC,oBAAoB,CAAC;AAG/C,MAAME,YAAY,GAAG,UAAUC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAE;EAC3C,IAAI;IACA,MAAMC,UAAU,GAAGH,GAAG,CAACI,OAAO,CAAC,eAAe,CAAC;IAC/C,MAAMC,KAAK,GAAGF,UAAU,IAAIA,UAAU,CAACG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACpD,IAAGD,KAAK,IAAI,IAAI,EAChB,OAAOJ,GAAG,CAACM,UAAU,CAAC,GAAG,CAAC;IAE1B,IAAI,CAACF,KAAK,EAAE;MACR,OAAOJ,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAED,MAAM,EAAE,KAAK;QAAEE,OAAO,EAAE;MAAiB,CAAC,CAAC;IAC7E;IACAd,GAAG,CAACe,MAAM,CAACN,KAAK,EAAE,OAAO,EAAE,UAAUO,GAAG,EAAEC,YAAY,EAAE;MACpD,IAAID,GAAG,EAAE;QACL,OAAOX,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;UAAED,MAAM,EAAE,KAAK;UAAEE,OAAO,EAAEE,GAAG,CAACF;QAAQ,CAAC,CAAC;MACxE;MACAV,GAAG,CAACa,YAAY,GAAGA,YAAY;MAC/BC,OAAO,CAACC,GAAG,CAACF,YAAY,CAAC;MACzBX,IAAI,EAAE;IACV,CAAC,CAAC;EACN,CAAC,CAAC,OAAOU,GAAG,EAAE;IACV,OAAOX,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAED,MAAM,EAAE,KAAK;MAAEE,OAAO,EAAEE,GAAG,CAACF;IAAQ,CAAC,CAAC;EACxE;AACJ,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAM,MAAM,CAACC,OAAO,GAAC;EAAClB;AAAY,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}