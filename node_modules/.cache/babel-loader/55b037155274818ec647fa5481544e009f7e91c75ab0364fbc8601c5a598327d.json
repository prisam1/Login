{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { fetchItineraries } from \"../Services/Itinerary/itineraryService\";\nexport const useItineraries = function () {\n  _s();\n  let initialPage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  let limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n  const [data, setData] = useState([]);\n  const [currentPage, setCurrentPage] = useState(initialPage);\n  const [totalPages, setTotalPages] = useState(1);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const loadData = async page => {\n    setLoading(true);\n    try {\n      const res = await fetchItineraries(page, limit);\n      setData(res.data);\n      setTotalPages(res.totalPages);\n      setCurrentPage(res.currentPage);\n    } catch (err) {\n      setError(err.message || \"Failed to fetch\");\n    }\n    setLoading(false);\n  };\n  useEffect(() => {\n    loadData(currentPage);\n  }, [currentPage]);\n  return {\n    data,\n    currentPage,\n    totalPages,\n    loading,\n    error,\n    setCurrentPage,\n    reload: () => loadData(currentPage)\n  };\n};\n_s(useItineraries, \"FVAt7mISY1BNh7sf4IrjxzOLevo=\");","map":{"version":3,"names":["useState","useEffect","fetchItineraries","useItineraries","initialPage","limit","data","setData","currentPage","setCurrentPage","totalPages","setTotalPages","loading","setLoading","error","setError","loadData","page","res","err","message","reload"],"sources":["D:/Projects/Login/src/Hooks/useItineraries.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { fetchItineraries } from \"../Services/Itinerary/itineraryService\";\r\n\r\nexport const useItineraries = (initialPage = 1, limit = 10) => {\r\n  const [data, setData] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(initialPage);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const loadData = async (page) => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await fetchItineraries(page, limit);\r\n      setData(res.data);\r\n      setTotalPages(res.totalPages);\r\n      setCurrentPage(res.currentPage);\r\n    } catch (err) {\r\n      setError(err.message || \"Failed to fetch\");\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData(currentPage);\r\n  }, [currentPage]);\r\n\r\n  return {\r\n    data,\r\n    currentPage,\r\n    totalPages,\r\n    loading,\r\n    error,\r\n    setCurrentPage,\r\n    reload: () => loadData(currentPage),\r\n  };\r\n};\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,gBAAgB,QAAQ,wCAAwC;AAEzE,OAAO,MAAMC,cAAc,GAAG,YAAiC;EAAA;EAAA,IAAhCC,WAAW,uEAAG,CAAC;EAAA,IAAEC,KAAK,uEAAG,EAAE;EACxD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAACI,WAAW,CAAC;EAC3D,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMgB,QAAQ,GAAG,MAAOC,IAAI,IAAK;IAC/BJ,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMK,GAAG,GAAG,MAAMhB,gBAAgB,CAACe,IAAI,EAAEZ,KAAK,CAAC;MAC/CE,OAAO,CAACW,GAAG,CAACZ,IAAI,CAAC;MACjBK,aAAa,CAACO,GAAG,CAACR,UAAU,CAAC;MAC7BD,cAAc,CAACS,GAAG,CAACV,WAAW,CAAC;IACjC,CAAC,CAAC,OAAOW,GAAG,EAAE;MACZJ,QAAQ,CAACI,GAAG,CAACC,OAAO,IAAI,iBAAiB,CAAC;IAC5C;IACAP,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACde,QAAQ,CAACR,WAAW,CAAC;EACvB,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB,OAAO;IACLF,IAAI;IACJE,WAAW;IACXE,UAAU;IACVE,OAAO;IACPE,KAAK;IACLL,cAAc;IACdY,MAAM,EAAE,MAAML,QAAQ,CAACR,WAAW;EACpC,CAAC;AACH,CAAC;AAAC,GAjCWL,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}